chunks:

-
    title: "Python Hello World"
    id: welcome
    rules:
    -   if_before: end_week 3
        weight: 100

    -   weight: 0

    content: |

            # Welcome to the course!

            Please take our introductory [quiz](flow:shell_redirections_quiz).
            Or via here <a href="flow:shell_redirections_quiz" role="button" class="btn btn-primary">Bootstrap button</a>.
            # Hi there!
            
            0x02. Shell, I/O Redirections and filters
            =========================================

            -   By Julien Barbier
            -   Weight: 1


            About Bash projects
            -------------------

            Unless stated, all your projects will be auto-corrected with Ubuntu 14.04 LTS.

            Resources
            ---------

            **Read or watch**:

            -   [Shell, I/O Redirection](https://alx-intranet.hbtn.io/rltoken/fGOQQXRKbvOcd1qLRxHzLQ "Shell, I/O Redirection")
            -   [Special Characters](https://alx-intranet.hbtn.io/rltoken/c1pz13vke3HPH0S8iALbtw "Special Characters")

            **man or help**:

            -   `echo`
            -   `cat`
            -   `head`
            -   `tail`
            -   `find`
            -   `wc`
            -   `sort`
            -   `uniq`
            -   `grep`
            -   `tr`
            -   `rev`
            -   `cut`
            -   `passwd (5)` (*i.e. `man 5 passwd`*)

            Learning Objectives
            -------------------

            At the end of this project, you are expected to be able to [explain to anyone](https://alx-intranet.hbtn.io/rltoken/WoF77AM7Rz1BcDT4o-_NeA "explain to anyone"), **without the help of Google**:

            ### Shell, I/O Redirection

            -   What do the commands `head`, `tail`, `find`, `wc`, `sort`, `uniq`, `grep`, `tr` do
            -   How to redirect standard output to a file
            -   How to get standard input from a file instead of the keyboard
            -   How to send the output from one program to the input of another program
            -   How to combine commands and filters with redirections

            ### Special Characters

            -   What are special characters
            -   Understand what do the white spaces, single quotes, double quotes, backslash, comment, pipe, command separator, tilde and how and when to use them

            ### Other Man Pages

            -   How to display a line of text
            -   How to concatenate files and print on the standard output
            -   How to reverse a string
            -   How to remove sections from each line of files
            -   What is the `/etc/passwd` file and what is its format
            -   What is the `/etc/shadow` file and what is its format

            Requirements
            ------------

            ### General

            -   Allowed editors: `vi`, `vim`, `emacs`
            -   All your scripts will be tested on Ubuntu 20.04 LTS
            -   All your scripts should be exactly two lines long (`$ wc -l file` should print 2)
            -   All your files should end with a new line ([why?](http://unix.stackexchange.com/questions/18743/whats-the-point-in-adding-a-new-line-to-the-end-of-a-file/18789))
            -   The first line of all your files should be exactly `#!/bin/bash`
            -   A `README.md` file, at the root of the folder of the project, describing what each script is doing
            -   You are not allowed to use backticks, `&&`, `||` or `;`
            -   All your files must be executable
            -   You are not allowed to use `sed` or `awk`

            More Info
            ---------

            Read your `/etc/passwd` and `/etc/shadow` files.

            Note: You do not have to learn about `fmt`, `pr`, `du`, `gzip`, `tar`, `lpr`, `sed` and `awk` yet.
            ### Description

            This project is useful when it comes to review skills in shell usage to redirect between files 
            
            ### Structure
            *  0-hello_world : prints "Hello, World", followed by a new line
            *  1-confused_smiley : displays a confused smiley to the terminal
            *  2-hellofile : displays the contents of /etc/passwd to the terminal
            *  3- twofiles : displays the contents of passwd and hosts to the terminal
            *  4-lastlines: displays the last 10 lines of the passwd file
            *  5-firstlines : dsisplays the first 10 lines of the passwd file
            *  6-third_line : displays the 3rd line of the file itaca
            *  7-file : creates a file that has special characters in it's name
            *  8-cwd_state : writes the result of a command into a file
            *  9-duplicate_last_line : dupliacates the last line of a file
            *  10-no_more_js : deletes all the .js files in the current directory and all it's subfolders
            *  11-directories : counts the number of directories and sub-directories in the current directory.
            *  12-newest_files : displays the 10 newest files
            *  13-unique : prints only words that appear once from a list of words
            *  14-findthatword: displays lines containig the word root from the passwd file
            *  15-countthatword : displays the number of lines that contain the word bin in the passwd file
            *  16-whatsnext : displays lines containing the pattern root and 3 lines after them in the file passwd
            *  17-hidethisword : displays all the lines in the file passwd that don't contain the pattern bin 
            *  18-letteronly : display all the lines of the file sshd_config starting with a capital letter 
            *  19-AZ : replace all characters A and c from input to Z and e respectively
            *  20-hiago : removes all letters c and C from input
            *  21-reverse : reverses its input
            *  22-users_and_homes : displays all users and their home directories sorted by users
            * 100-empty_casks : a command that finds all empty files and directories in the current directory and all sub-directories.
            * 101-gifs : a script that lists all the files with a .gif extension in the current directory and all its sub-directories.
            * 102-acrostic : a script that decodes acrostics that use the first letter of each line.
            * 103-the_biggest_fan : a script that parses web servers logs in TSV format as input and displays the 11 hosts or IP addresses which did the most requests.


-
    title: "Python hello tas pointer"

    id: tas pointer
    rules:
    -
        if_after: 2022-06-01
        weight: 200

    -
        shown: True
        weight: 0

    content: |

        # Welcome to the computer-based testing facility!

        <a href="flow:shell_redirections_task" class="btn btn-secondary">Start tas &raquo;</a>


