title: "RELATE Test Quiz"
description: |

    # RELATE Test Quiz

rules:
    # (Things behind '#' hash marks are comments.)
    # Allow students to start two attempts at the quiz before the deadline.
    # After that, only allow access to previously started quizzes.

    start:
    -
        if_after: 2015-03-06 23:59:00
        if_has_role: [student, ta, instructor]
        if_has_fewer_sessions_than: 2
        may_start_new_session: True
        may_list_existing_sessions: True

    -
        may_start_new_session: False
        may_list_existing_sessions: True

    # Allow students to submit quiz answers before the deadline.
    # After the deadline, the quiz becomes read-only. (The 'modify'
    # permission goes away.)

    access:
    -
        if_after: 2015-03-06 23:59:02
        permissions: [view, submit_answer, end_session, see_correctness]

    -
        permissions: [view, see_correctness, see_answer_after_submission]

    # Record grades under the machine-readable name 'test_quiz'.
    # If there is more than one grade, use the maximum.

    grade_identifier: test_quiz
    grade_aggregation_strategy: max_grade

    grading:
    -   
        if_completed_before: end_week 1
        credit_percent: 100

    -
        if_completed_before: end_week 2
        credit_percent: 65

    -
        credit_percent: 50

pages:

-
    type: PythonclearCodeQuestionWithHumanTextFeedback
    id: hgtext
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 0\. Who am I?

        mandatory

        Score: 50.00% (Checks completed: 100.00%)

        What function would you use to print the type of an object?

        Write the name of the function in the file, without `()`.

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `0-answer.txt`
            
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext1
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
    
        Tasks
        -----
            
        ### 1\. Where are you?

        mandatory

        Score: 50.00% (Checks completed: 100.00%)

        How do you get the variable identifier (which is the memory address in the CPython implementation)?

        Write the name of the function in the file, without `()`.

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `1-answer.txt`

    rubric: |
            
            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext2
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----
            
        ### 2\. Right count

        mandatory

        Score: 50.00% (Checks completed: 100.00%)

        In the following code, do `a` and `b` point to the same object? Answer with `Yes` or `No`.

        ```
        >>> a = 89
        >>> b = 100

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `2-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext3
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 3\. Right count =

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        In the following code, do `a` and `b` point to the same object? Answer with `Yes` or `No`.

        ```
        >>> a = 89
        >>> b = 89

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `3-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext4
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 4\. Right count =

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        In the following code, do `a` and `b` point to the same object? Answer with `Yes` or `No`.

        ```
        >>> a = 89
        >>> b = a

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `4-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext5
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 5\. Right count =+

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        In the following code, do `a` and `b` point to the same object? Answer with `Yes` or `No`.

        ```
        >>> a = 89
        >>> b = a + 1

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `5-answer.txt`
        
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext6
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
    
        Tasks
        -----

        ### 6\. Is equal

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What do these 3 lines print?

        ```
        >>> s1 = "Best School"
        >>> s2 = s1
        >>> print(s1 == s2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `6-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext7
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 7\. Is the same

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What do these 3 lines print?

        ```
        >>> s1 = "Best"
        >>> s2 = s1
        >>> print(s1 is s2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `7-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext8
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 8\. Is really equal

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What do these 3 lines print?

        ```
        >>> s1 = "Best School"
        >>> s2 = "Best School"
        >>> print(s1 == s2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `8-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext9
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 9\. Is really the same

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What do these 3 lines print?

        ```
        >>> s1 = "Best School"
        >>> s2 = "Best School"
        >>> print(s1 is s2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `9-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext10
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 10\. And with a list, is it equal

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What do these 3 lines print?

        ```
        >>> l1 = [1, 2, 3]
        >>> l2 = [1, 2, 3]
        >>> print(l1 == l2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `10-answer.txt`
    rubric: |

            Has something interesting to say.

-
    type: PythonclearCodeQuestionWithHumanTextFeedback
    id: hgtext11
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 11\. And with a list, is it the same

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What do these 3 lines print?

        ```
        >>> l1 = [1, 2, 3]
        >>> l2 = [1, 2, 3]
        >>> print(l1 is l2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `11-answer.txt`
            
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext12
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
    
        Tasks
        -----
            
        ### 12\. And with a list, is it really equal

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What do these 3 lines print?

        ```
        >>> l1 = [1, 2, 3]
        >>> l2 = l1
        >>> print(l1 == l2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `12-answer.txt`

    rubric: |
            
            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext13
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----
            
        ### 13\. And with a list, is it really the same

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What do these 3 lines print?

        ```
        >>> l1 = [1, 2, 3]
        >>> l2 = l1
        >>> print(l1 is l2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `13-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext14
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 14\. List append

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What does this script print?

        ```
        l1 = [1, 2, 3]
        l2 = l1
        l1.append(4)
        print(l2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `14-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext15
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 15\. List add

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What does this script print?

        ```
        l1 = [1, 2, 3]
        l2 = l1
        l1 = l1 + [4]
        print(l2)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `15-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext16
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 16\. Integer incrementation

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What does this script print?

        ```
        def increment(n):
            n += 1

        a = 1
        increment(a)
        print(a)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `16-answer.txt`
        
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext17
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
    
        Tasks
        -----

        ### 17\. List incrementation

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What does this script print?

        ```
        def increment(n):
            n.append(4)

        l = [1, 2, 3]
        increment(l)
        print(l)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `17-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext18
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 18\. List assignation

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What does this script print?

        ```
        def assign_value(n, v):
            n = v

        l1 = [1, 2, 3]
        l2 = [4, 5, 6]
        assign_value(l1, l2)
        print(l1)

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `18-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext19
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 19\. Copy a list object

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        Write a function `def copy_list(l):` that returns a **copy** of a list.

        -   The input list can contain any type of objects
        -   Your file should be maximum 3-line long (no documentation needed)
        -   You are not allowed to import any module

        ```
        guillaume@ubuntu:~/0x09$ cat 19-main.py
        #!/usr/bin/python3
        copy_list = __import__('19-copy_list').copy_list

        my_list = [1, 2, 3]
        print(my_list)

        new_list = copy_list(my_list)

        print(my_list)
        print(new_list)

        print(new_list == my_list)
        print(new_list is my_list)

        guillaume@ubuntu:~/0x09$ ./19-main.py
        [1, 2, 3]
        [1, 2, 3]
        [1, 2, 3]
        True
        False
        guillaume@ubuntu:~/0x09$ wc -l 19-copy_list.py
        3 19-copy_list.py
        guillaume@ubuntu:~/0x09$

        ```

        **No test cases needed**

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `19-copy_list.py`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext20
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 20\. Tuple or not?

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        ```
        a = ()

        ```

        Is `a` a tuple? Answer with `Yes` or `No`.

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `20-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext21
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 21\. Tuple or not?

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        ```
        a = (1, 2)

        ```

        Is `a` a tuple? Answer with `Yes` or `No`.

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `21-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonclearCodeQuestionWithHumanTextFeedback
    id: hgtext22
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 22\. Tuple or not?

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        ```
        a = (1)

        ```

        Is `a` a tuple? Answer with `Yes` or `No`.

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `22-answer.txt`
            
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext23
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
    
        Tasks
        -----
            
        ### 23\. Tuple or not?

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        ```
        a = (1, )

        ```

        Is `a` a tuple? Answer with `Yes` or `No`.

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `23-answer.txt`

    rubric: |
            
            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext24
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----
            
        ### 24\. Who I am?

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What does this script print?

        ```
        a = (1)
        b = (1)
        a is b

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `24-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext25
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 25\. Tuple or not

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What does this script print?

        ```
        a = (1, 2)
        b = (1, 2)
        a is b

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `25-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext26
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 26\. Empty is not empty

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        What does this script print?

        ```
        a = ()
        b = ()
        a is b

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `26-answer.txt`

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext27
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 27\. Still the same?

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        ```
        >>> id(a)
        139926795932424
        >>> a
        [1, 2, 3, 4]
        >>> a = a + [5]
        >>> id(a)

        ```

        Will the last line of this script print `139926795932424`? Answer with `Yes` or `No`.

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `27-answer.txt`
        
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext28
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
    
        Tasks
        -----

        ### 28\. Same or not?

        mandatory

        Score: 0.00% (Checks completed: 0.00%)

        ```
        >>> a
        [1, 2, 3]
        >>> id (a)
        139926795932424
        >>> a += [4]
        >>> id(a)

        ```

        Will the last line of this script print `139926795932424`? Answer with `Yes` or `No`.

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `28-answer.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext29
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 29\. #pythonic

        #advanced

        Score: 0.00% (Checks completed: 0.00%)

        Write a function `magic_string()` that returns a string "BestSchool" n times the number of the iteration (see code):

        -   Format: see example
        -   Your file should be maximum 4-line long (no documentation needed)
        -   You are not allowed to import any module

        ```
        guillaume@ubuntu:~/0x09$ cat 100-main.py
        #!/usr/bin/python3
        magic_string = __import__('100-magic_string').magic_string

        for i in range(10):
            print(magic_string())

        guillaume@ubuntu:~/0x09$ ./100-main.py | cat -e
        BestSchool$
        BestSchool, BestSchool$
        BestSchool, BestSchool, BestSchool$
        BestSchool, BestSchool, BestSchool, BestSchool$
        BestSchool, BestSchool, BestSchool, BestSchool, BestSchool$
        BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool$
        BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool$
        BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool$
        BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool$
        BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool, BestSchool$
        guillaume@ubuntu:~/0x09$ wc -l 100-magic_string.py
        4 100-magic_string.py
        guillaume@ubuntu:~/0x09$

        ```

        **No test cases needed**

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `100-magic_string.py`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext30
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 30\. Low memory cost

        #advanced

        Score: 0.00% (Checks completed: 0.00%)

        Write a class `LockedClass` with no class or object attribute, that prevents the user from dynamically creating new instance attributes, except if the new instance attribute is called `first_name`.

        -   You are not allowed to import any module

        ```
        guillaume@ubuntu:~/0x09$ cat 101-main.py
        #!/usr/bin/python3
        LockedClass = __import__('101-locked_class').LockedClass

        lc = LockedClass()
        lc.first_name = "John"
        try:
            lc.last_name = "Snow"
        except Exception as e:
            print("[{}] {}".format(e.__class__.__name__, e))

        guillaume@ubuntu:~/0x09$ ./101-main.py
        [AttributeError] 'LockedClass' object has no attribute 'last_name'
        guillaume@ubuntu:~/0x09$

        ```

        **No test cases needed**

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `101-locked_class.py`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext31
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 31\. int 1/3

        #advanced

        Score: 0.00% (Checks completed: 0.00%)

        ```
        julien@ubuntu:/python3$ cat int.py
        a = 1
        b = 1
        julien@ubuntu:/python3$

        ```

        Assuming we are using a CPython implementation of Python3 with default options/configuration:

        -   How many int objects are created by the execution of the first line of the script? (`103-line1.txt`)
        -   How many int objects are created by the execution of the second line of the script (`103-line2.txt`)

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `103-line1.txt, 103-line2.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext32
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 32\. int 2/3

        #advanced

        Score: 0.00% (Checks completed: 0.00%)

        ```
        julien@ubuntu:/python3$ cat int.py
        a = 1024
        b = 1024
        del a
        del b
        c = 1024
        julien@ubuntu:/python3$

        ```

        Assuming we are using a CPython implementation of Python3 with default options/configuration:

        -   How many int objects are created by the execution of the first line of the script? (`104-line1.txt`)
        -   How many int objects are created by the execution of the second line of the script (`104-line2.txt`)
        -   After the execution of line 3, is the int object pointed by `a` deleted? Answer with `Yes` or `No` (`104-line3.txt`)
        -   After the execution of line 4, is the int object pointed by `b` deleted? Answer with `Yes` or `No` (`104-line4.txt`)
        -   How many int objects are created by the execution of the last line of the script (`104-line5.txt`)

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `104-line1.txt, 104-line2.txt, 104-line3.txt, 104-line4.txt, 104-line5.txt`
    
    rubric: |

            Has something interesting to say.

-
    type: PythonclearCodeQuestionWithHumanTextFeedback
    id: hgtext33
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 33\. int 3/3

        #advanced

        Score: 0.00% (Checks completed: 0.00%)

        ```
        julien@twix:/tmp/so$ cat int.py
        print("I")
        print("Love")
        print("Python")
        julien@ubuntu:/tmp/so$

        ```

        Assuming we are using a CPython implementation of Python3 with default options/configuration:

        -   Before the execution of line 2 (`print("Love")`), how many int objects have been created and are still in memory? (`105-line1.txt`)
        -   Why? (optional blog post :))

        Hint: `NSMALLPOSINTS`, `NSMALLNEGINTS`

        ![](https://s3.amazonaws.com/alx-intranet.hbtn.io/uploads/medias/2020/9/70f9ea0e969dfcc407a7427aba4786d87a920494.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIARDDGGGOUSBVO6H7D%2F20211217%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20211217T122124Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&X-Amz-Signature=d51037ace1efdb11b01809600489a7c4c4abb9b41d339b48b63808b661c50244)

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `105-line1.txt`
            
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext34
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
    
        Tasks
        -----
            
        ### 34\. Clear strings

        #advanced

        Score: 0.00% (Checks completed: 0.00%)

        ```
        guillaume@ubuntu:/python3$ cat string.py
        a = "SCHL"
        b = "SCHL"
        del a
        del b
        c = "SCHL"
        guillaume@ubuntu:/python3$

        ```

        Assuming we are using a CPython implementation of Python3 with default options/configuration (For answers with numbers use integers, don't spell out the word):

        -   How many string objects are created by the execution of the first line of the script? (`106-line1.txt`)
        -   How many string objects are created by the execution of the second line of the script (`106-line2.txt`)
        -   After the execution of line 3, is the string object pointed by `a` deleted? Answer with `Yes` or `No` (`106-line3.txt`)
        -   After the execution of line 4, is the string object pointed by `b` deleted? Answer with `Yes` or `No` (`106-line4.txt`)
        -   How many string objects are created by the execution of the last line of the script (`106-line5.txt`)

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x09-python-everything_is_object`
        -   File: `106-line1.txt, 106-line2.txt, 106-line3.txt, 106-line4.txt, 106-line5.txt`

    rubric: |
            
            Has something interesting to say.


completion_text: |

        You have successfully completed the test exam!
