title: "RELATE Test Quiz"
description: |

    # RELATE Test Quiz

rules:
    # (Things behind '#' hash marks are comments.)
    # Allow students to start two attempts at the quiz before the deadline.
    # After that, only allow access to previously started quizzes.

    start:
    -
        if_after: 2015-03-06 23:59:00
        if_has_role: [student, ta, instructor]
        if_has_fewer_sessions_than: 2
        may_start_new_session: True
        may_list_existing_sessions: True

    -
        may_start_new_session: False
        may_list_existing_sessions: True

    # Allow students to submit quiz answers before the deadline.
    # After the deadline, the quiz becomes read-only. (The 'modify'
    # permission goes away.)

    access:
    -
        if_after: 2015-03-06 23:59:02
        permissions: [view, submit_answer, end_session, see_correctness]

    -
        permissions: [view, see_correctness, see_answer_after_submission]

    # Record grades under the machine-readable name 'test_quiz'.
    # If there is more than one grade, use the maximum.

    grade_identifier: firewall_task
    grade_aggregation_strategy: max_grade

    grading:
    -   
        if_completed_before: end_week 1
        credit_percent: 100

    -
        if_completed_before: end_week 2
        credit_percent: 65

    -
        credit_percent: 50

pages:

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 0\. Block all incoming traffic but

        mandatory

        Let's install the `ufw` firewall and setup a few rules on `web-01`.

        Requirements:

        -   The requirements below must be applied to `web-01` (feel free to do it on `lb-01` and `web-02`, but it won't be checked)
        -   Configure `ufw` so that it blocks all incoming traffic, except the following TCP ports:
            -   `22` (SSH)
            -   `443` (HTTPS SSL)
            -   `80` (HTTP)
        -   Share the `ufw` commands that you used in your answer file

        **Repo:**

        -   GitHub repository: `alx-system_engineering-devops`
        -   Directory: `0x13-firewall`
        -   File: `0-block_all_incoming_traffic_but`

         Done? Help Check your code
            
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext1
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
            
            Tasks
            -----
            
            ### 1\. Port forwarding

            #advanced

            Firewalls can not only filter requests, they can also forward them.

            Requirements:

            -   Configure `web-01` so that its firewall redirects port `8080/TCP` to port `80/TCP`.
            -   Your answer file should be a copy of the `ufw` configuration file that you modified to make this happen

            Terminal in `web-01`:

            ```
            root@03-web-01:~# netstat -lpn
            Active Internet connections (only servers)
            Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
            tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      2473/nginx
            tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      978/sshd
            tcp6       0      0 :::80                   :::*                    LISTEN      2473/nginx
            tcp6       0      0 :::22                   :::*                    LISTEN      978/sshd
            udp        0      0 0.0.0.0:68              0.0.0.0:*                           594/dhclient
            udp        0      0 0.0.0.0:54432           0.0.0.0:*                           594/dhclient
            udp6       0      0 :::32563                :::*                                594/dhclient
            Active UNIX domain sockets (only servers)
            Proto RefCnt Flags       Type       State         I-Node   PID/Program name    Path
            unix  2      [ ACC ]     SEQPACKET  LISTENING     7175     433/systemd-udevd   /run/udev/control
            unix  2      [ ACC ]     STREAM     LISTENING     6505     1/init              @/com/ubuntu/upstart
            unix  2      [ ACC ]     STREAM     LISTENING     8048     741/dbus-daemon     /var/run/dbus/system_bus_socket
            unix  2      [ ACC ]     STREAM     LISTENING     8419     987/acpid           /var/run/acpid.socket
            root@03-web-01:~#
            root@03-web-01:~# grep listen /etc/nginx/sites-enabled/default
                listen 80 default_server;
                listen [::]:80 default_server ipv6only=on;
                # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
            #   listen 8000;
            #   listen somename:8080;
            #   listen 443;
            root@03-web-01:~#

            ```

            -   My web server `nginx` is only listening on port `80`
            -   `netstat` shows that nothing is listening on `8080`

            Terminal in `web-02`:

            ```
            ubuntu@03-web-02:~$ curl -sI web-01.holberton.online:80
            HTTP/1.1 200 OK
            Server: nginx/1.4.6 (Ubuntu)
            Date: Tue, 07 Mar 2017 02:14:41 GMT
            Content-Type: text/html
            Content-Length: 612
            Last-Modified: Tue, 04 Mar 2014 11:46:45 GMT
            Connection: keep-alive
            ETag: "5315bd25-264"
            Accept-Ranges: bytes

            ubuntu@03-web-02:~$ curl -sI web-01.holberton.online:8080
            HTTP/1.1 200 OK
            Server: nginx/1.4.6 (Ubuntu)
            Date: Tue, 07 Mar 2017 02:14:43 GMT
            Content-Type: text/html
            Content-Length: 612
            Last-Modified: Tue, 04 Mar 2014 11:46:45 GMT
            Connection: keep-alive
            ETag: "5315bd25-264"
            Accept-Ranges: bytes

            ubuntu@03-web-02:~$

            ```

            I use curl to query `web-01.holberton.online`, and since my firewall is forwarding the ports, I get a `HTTP 200` response on port `80/TCP` and also on port `8080/TCP`.

            **Repo:**

            -   GitHub repository: `alx-system_engineering-devops`
            -   Directory: `0x13-firewall`
            -   File: `100-port_forwarding`

    rubric: |
            
            Has something interesting to say.



completion_text: |

        You have successfully completed the test exam!
