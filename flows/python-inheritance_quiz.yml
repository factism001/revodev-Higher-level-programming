# This is a YAML comment, which is entirely ignored.

# YAML files in Relate are preprocessed with Jinja2.
# See http://jinja.pocoo.org/docs/latest/templates/ for syntax.

# This brings in a helper function that is used to include pages from
# separate files. This is optional, but conceivably useful.
{% from "yaml-macros.yml" import indented_include %}

title: "RELATE Test Quiz"

# The "|" character introduces a 'block literal', which means all text indented below
# it is taken literally. The description property holds text marked up with 'Markdown'.
# See https://documen.tician.de/relate/content.html#relate-markup for more.
#
# So the '#' character below introduces a first-level headline (not a comment).
description: |

    # RELATE Test Quiz

rules:
    start:
    -
        if_before: end_week 1
        if_has_role: [student, ta, instructor]
        if_has_fewer_sessions_than: 4
        may_start_new_session: True
        may_list_existing_sessions: True

    -
        may_start_new_session: False
        may_list_existing_sessions: True

    access:
    -
        message: "Welcome! This message is brought to you by the access rules."
        permissions: [view, submit_answer, end_session, see_correctness, see_answer_after_submission]

    grade_identifier: python-inheritance_quiz
    grade_aggregation_strategy: use_latest

    grading:
    -
        credit_percent: 100

groups:
-
    id: intro
    pages:

    -
        type: Page
        id: welcome
        content: |

            # Welcome to the test quiz for RELATE!

            Don't be scared.

-
    id: quiz_start
    shuffle: False
    pages:

    # Pages can be given in-line (like this one) or brought in by including
    # them from other files, as below.
    -
        type: MultipleChoiceQuestion
        id: shell_navigation
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #0

            What do these lines print?

                ```
                class Base():
                    """ My base class """
                
                    __nb_instances = 0
                
                    def __init__(self):
                        Base.__nb_instances += 1
                        self.id = Base.__nb_instances
                
                b = Base()
                print(b.id)
                ```  

        choices:

          - ~CORRECT~ 1
          - None
          - 0
    
    -
        type: MultipleChoiceQuestion
        id: shell_navigation1
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #1
            
            ```
            class Base():
                """ My base class """
            
                __nb_instances = 0
            
                def __init__(self):
                    Base.__nb_instances += 1
                    self.id = Base.__nb_instances
            
            class User(Base):
                """ My User class """
                pass
            
            for i in range(4):
                u = User()
            print(u.id)
            ```

                
        choices:

          - None
          - 5
          - ~CORRECT~ 4
          - 3

    -
        type: MultipleChoiceQuestion
        id: shell_navigation2
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #2
            
            ```
            class Base():
                """ My base class """
            
                __nb_instances = 0
            
                def __init__(self):
                    Base.__nb_instances += 1
                    self.id = Base.__nb_instances
            
            class User(Base):
                """ My User class """
            
                def __init__(self):
                    super().__init__()
                    self.id += 99
            
            u = User()
            print(u.id)
            ```


        choices:

          - 1
          - 99
          - ~CORRECT~ 100

    -
        type: MultipleChoiceQuestion
        id: shell_navigation3
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #3
            
            What do these lines print?

                ```
                class Base():
                    """ My base class """
                
                    __nb_instances = 0
                
                    def __init__(self):
                        Base.__nb_instances += 1
                        self.id = Base.__nb_instances
                
                class User(Base):
                    """ My User class """
                
                    def __init__(self):
                        super().__init__()
                
                u = User()
                print(u.id)
                ```

        choices:

          - 2
          - ~CORRECT~ 1
          - None
          - 0

    -
        type: MultipleChoiceQuestion
        id: shell_navigation4
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #4
            
            What do these lines print?

                ```
                class Base():
                    """ My base class """
                
                    __nb_instances = 0
                
                    def __init__(self):
                        Base.__nb_instances += 1
                        self.id = Base.__nb_instances
                
                class User(Base):
                    """ My User class """
                
                    def __init__(self):
                        self.id = 89
                
                u = User()
                print(u.id)
                ```

        choices:

          - 1
          - ~CORRECT~ 89
          - 90
    
    -
        type: MultipleChoiceQuestion
        id: shell_navigation5
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #5
            
            What do these lines print?

                ```
                class Base():
                    """ My base class """
                
                    __nb_instances = 0
                
                    def __init__(self):
                        Base.__nb_instances += 1
                        self.id = Base.__nb_instances
                
                class User(Base):
                    """ My User class """
                    pass
                
                b = Base()
                u = User()
                print(u.id)
                ```

        choices:

          - 3
          - ~CORRECT~ 2
          - 0
          - 1

    -
        type: MultipleChoiceQuestion
        id: shell_navigation6
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #6
            
            What do these lines print?

                ```
                class Base():
                    """ My base class """
                
                    __nb_instances = 0
                
                    def __init__(self):
                        Base.__nb_instances += 1
                        self.id = Base.__nb_instances
                
                for i in range(3):
                    b = Base()
                print(b.id)
                ```

        choices:

          - 2
          - 4
          - None
          - ~CORRECT~ 3

    -
        type: MultipleChoiceQuestion
        id: shell_navigation7
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #7
            
            ```
            class Base():
                """ My base class """
            
                __nb_instances = 0
            
                def __init__(self):
                    Base.__nb_instances += 1
                    self.id = Base.__nb_instances
            
            class User(Base):
                """ My User class """
            
                def __init__(self):
                    super().__init__()
                    self.id = 89
            
            u = User()
            print(u.id)
            ```


        choices:

          - 1
          - ~CORRECT~ 89
          - 90

    -
        type: MultipleChoiceQuestion
        id: shell_navigation8
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #8
            
            What do these lines print?

                ```
                class Base():
                    """ My base class """
                
                    __nb_instances = 0
                
                    def __init__(self):
                        Base.__nb_instances += 1
                        self.id = Base.__nb_instances
                
                class User(Base):
                    """ My User class """
                
                    def __init__(self):
                        self.id = 89
                        super().__init__()
                
                u = User()
                print(u.id)
                ```


        choices:

          - ~CORRECT~ 1
          - 89
          - 90

    -   type: MultipleChoiceQuestion
        id: shell_navigation9
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #9
            
            What do these lines print?

            class Base():
                """ My base class """
            
                __nb_instances = 0
            
                def __init__(self):
                    Base.__nb_instances += 1
                    self.id = Base.__nb_instances
            
            class User(Base):
                """ My User class """
                pass
            
            u = User()
            print(u.id)


        choices:

          - 2
          - ~CORRECT~ 1
          - None
          - 0
    


completion_text: |

    # See you in class!

    Thanks for completing the quiz.
