title: "RELATE Test Quiz"
description: |

    # RELATE Test Quiz

rules:
    # (Things behind '#' hash marks are comments.)
    # Allow students to start two attempts at the quiz before the deadline.
    # After that, only allow access to previously started quizzes.

    start:
    -
        if_after: 2015-03-06 23:59:00
        if_has_role: [student, ta, instructor]
        if_has_fewer_sessions_than: 2
        may_start_new_session: True
        may_list_existing_sessions: True

    -
        may_start_new_session: False
        may_list_existing_sessions: True

    # Allow students to submit quiz answers before the deadline.
    # After the deadline, the quiz becomes read-only. (The 'modify'
    # permission goes away.)

    access:
    -
        if_after: 2015-03-06 23:59:02
        permissions: [view, submit_answer, end_session, see_correctness]

    -
        permissions: [view, see_correctness, see_answer_after_submission]

    # Record grades under the machine-readable name 'test_quiz'.
    # If there is more than one grade, use the maximum.

    grade_identifier: javascript_warm_up_task
    grade_aggregation_strategy: max_grade

    grading:
    -   
        if_completed_before: end_week 1
        credit_percent: 100

    -
        if_completed_before: end_week 2
        credit_percent: 65

    -
        credit_percent: 50

pages:

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

        Tasks
        -----

        ### 0\. First constant, first print

        mandatory

        Write a script that prints "JavaScript is amazing":

        -   You must create a constant variable called `myVar` with the value "JavaScript is amazing"
        -   You must use `console.log(...)` to print all output
        -   You are not allowed to use `var`

        ```
        guillaume@ubuntu:~/0x12$ ./0-javascript_is_amazing.js
        JavaScript is amazing
        guillaume@ubuntu:~/0x12$
        guillaume@ubuntu:~/0x12$ semistandard ./0-javascript_is_amazing.js
        guillaume@ubuntu:~/0x12$

        ```

        **Repo:**

        -   GitHub repository: `alx-higher_level_programming`
        -   Directory: `0x12-javascript-warm_up`
        -   File: `0-javascript_is_amazing.js`

         Done? Help Check your code Get a sandbox
            
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext1
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
            
            Tasks
            -----
            
            ### 1\. 3 languages

            mandatory

            Write a script that prints 3 lines:

            -   The first line: "C is fun"
            -   The second line: "Python is cool"
            -   The third line: "JavaScript is amazing"
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ ./1-multi_languages.js
            C is fun
            Python is cool
            JavaScript is amazing
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `1-multi_languages.js`

             Done? Help Check your code Get a sandbox

    rubric: |
            
            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext2
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----
            
            ### 2\. Arguments

            mandatory

            Write a script that prints a message depending of the number of arguments passed:

            -   If no arguments are passed to the script, print "No argument"
            -   If only one argument is passed to the script, print "Argument found"
            -   Otherwise, print "Arguments found"
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`

            Reference: [process.argv](https://alx-intranet.hbtn.io/rltoken/5kTYi3rxb6KM1_pivm-tXg "process.argv")

            ```
            guillaume@ubuntu:~/0x12$ ./2-arguments.js
            No argument
            guillaume@ubuntu:~/0x12$ ./2-arguments.js Best
            Argument found
            guillaume@ubuntu:~/0x12$ ./2-arguments.js Best School
            Arguments found
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `2-arguments.js`

             Done? Help Check your code

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext3
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 3\. Value of my argument

            mandatory

            Write a script that prints the first argument passed to it:

            -   If no arguments are passed to the script, print "No argument"
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`
            -   You are not allowed to use `length`

            ```
            guillaume@ubuntu:~/0x12$ ./3-value_argument.js
            No argument
            guillaume@ubuntu:~/0x12$ ./3-value_argument.js School
            School
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `3-value_argument.js`

             Done? Help Check your code

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext4
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 4\. Create a sentence

            mandatory

            Write a script that prints two arguments passed to it, in the following format: " is "

            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ ./4-concat.js c cool
            c is cool
            guillaume@ubuntu:~/0x12$ ./4-concat.js c
            c is undefined
            guillaume@ubuntu:~/0x12$ ./4-concat.js
            undefined is undefined
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `4-concat.js`

             Done? Help Check your code Get a sandbox

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext5
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 5\. An Integer

            mandatory

            Write a script that prints `My number: <first argument converted in integer>` if the first argument can be converted to an integer:

            -   If the argument can't be converted to an integer, print "Not a number"
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`
            -   You are not allowed to use `try/catch`

            ```
            guillaume@ubuntu:~/0x12$ ./5-to_integer.js
            Not a number
            guillaume@ubuntu:~/0x12$ ./5-to_integer.js 89
            My number: 89
            guillaume@ubuntu:~/0x12$ ./5-to_integer.js "89"
            My number: 89
            guillaume@ubuntu:~/0x12$ ./5-to_integer.js 89.89
            My number: 89
            guillaume@ubuntu:~/0x12$ ./5-to_integer.js School
            Not a number
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `5-to_integer.js`

             Done? Help Check your code
        
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext6
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
            Tasks
            -----

            ### 6\. Loop to languages

            mandatory

            Write a script that prints 3 lines: (like `1-multi_languages.js`) but by using an array of string and a loop

            -   The first line: "C is fun"
            -   The second line: "Python is cool"
            -   The third line: "JavaScript is amazing"
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`
            -   You are not allowed to use any `if/else` statement
            -   You can use only one `console.log`
            -   You must use a loop (`while`, `for`, etc.)

            ```
            guillaume@ubuntu:~/0x12$ ./6-multi_languages_loop.js
            C is fun
            Python is cool
            JavaScript is amazing
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `6-multi_languages_loop.js`

             Done? Help Check your code Get a sandbox
    
    rubric: |

            Has something interesting to say.


-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext7
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 7\. I love C

            mandatory

            Write a script that prints `x` times "C is fun"

            -   Where `x` is the first argument of the script
            -   If the first argument can't be converted to an integer, print "Missing number of occurrences"
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`
            -   You can use only two `console.log`
            -   You must use a loop (`while`, `for`, etc.)

            ```
            guillaume@ubuntu:~/0x12$ ./7-multi_c.js 2
            C is fun
            C is fun
            guillaume@ubuntu:~/0x12$ ./7-multi_c.js 5
            C is fun
            C is fun
            C is fun
            C is fun
            C is fun
            guillaume@ubuntu:~/0x12$ ./7-multi_c.js
            Missing number of occurrences
            guillaume@ubuntu:~/0x12$ ./7-multi_c.js -3
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `7-multi_c.js`

             Done? Help Check your code Get a sandbox
    
    rubric: |

            Has something interesting to say.


-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext8
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 8\. Square

            mandatory

            Write a script that prints a square

            -   The first argument is the size of the square
            -   If the first argument can't be converted to an integer, print "Missing size"
            -   You must use the character `X` to print the square
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`
            -   You must use a loop (`while`, `for`, etc.)

            ```
            guillaume@ubuntu:~/0x12$ ./8-square.js
            Missing size
            guillaume@ubuntu:~/0x12$ ./8-square.js School
            Missing size
            guillaume@ubuntu:~/0x12$ ./8-square.js 2
            XX
            XX
            guillaume@ubuntu:~/0x12$ ./8-square.js 6
            XXXXXX
            XXXXXX
            XXXXXX
            XXXXXX
            XXXXXX
            XXXXXX
            guillaume@ubuntu:~/0x12$ ./8-square.js -3
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `8-square.js`

             Done? Help Check your code
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext9
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 9\. Add

            mandatory

            Write a script that prints the addition of 2 integers

            -   The first argument is the first integer
            -   The second argument is the second integer
            -   You have to define a function with this prototype: `function add(a, b)`
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ ./9-add.js
            NaN
            guillaume@ubuntu:~/0x12$ ./9-add.js 1
            NaN
            guillaume@ubuntu:~/0x12$ ./9-add.js 1 7
            8
            guillaume@ubuntu:~/0x12$ ./9-add.js 13 89
            102
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `9-add.js`

             Done? Help Check your code Get a sandbox
    
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext10
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
            
            Tasks
            -----
            
            ### 10\. Factorial

            mandatory

            Write a script that computes and prints a factorial

            -   The first argument is integer (argument can be cast as integer) used for computing the factorial
            -   Factorial of `NaN` is `1`
            -   You must do it recursively
            -   You must use a function
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ ./10-factorial.js
            1
            guillaume@ubuntu:~/0x12$ ./10-factorial.js 3
            6
            guillaume@ubuntu:~/0x12$ ./10-factorial.js 89
            1.6507955160908452e+136
            guillaume@ubuntu:~/0x12$ ./10-factorial.js 333
            Infinity
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `10-factorial.js`

             Done? Help Check your code Get a sandbox

    rubric: |
            
            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext11
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----
            
            ### 11\. Second biggest!

            mandatory

            Write a script that searches the second biggest integer in the list of arguments.

            -   You can assume all arguments can be converted to integer
            -   If no argument passed, print `0`
            -   If the number of arguments is 1, print `0`
            -   You must use `console.log(...)` to print all output
            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ ./11-second_biggest.js
            0
            guillaume@ubuntu:~/0x12$ ./11-second_biggest.js 1
            0
            guillaume@ubuntu:~/0x12$ ./11-second_biggest.js 4 2 5 3 0 -3
            4
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `11-second_biggest.js`

             Done? Help Check your code

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext12
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 12\. Object

            mandatory

            Update this script to replace the value `12` with `89`:

            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ cat 12-object.js
            #!/usr/bin/node
            const myObject = {
            type: 'object',
            value: 12
            };
            console.log(myObject);
            /*
            YOUR CODE HERE
            */
            console.log(myObject);

            guillaume@ubuntu:~/0x12$ ./12-object.js
            { type: 'object', value: 12 }
            { type: 'object', value: 89 }
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `12-object.js`

             Done? Help Check your code Get a sandbox

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext13
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 13\. Add file

            mandatory

            Write a function that returns the addition of 2 integers.

            -   The function must be visible from outside
            -   The name of the function must be `add`
            -   You are not allowed to use `var`

            [Tip](https://alx-intranet.hbtn.io/rltoken/1k6VPdLchwtGubOfPyGL1Q "Tip")

            ```
            guillaume@ubuntu:~/0x12$ cat 13-main.js
            #!/usr/bin/node
            const add = require('./13-add').add;
            console.log(add(3, 5));
            guillaume@ubuntu:~/0x12$ ./13-main.js
            8
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `13-add.js`

             Done?

    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext14
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 14\. Const or not const

            #advanced

            Score: 0.00% (Checks completed: 0.00%)

            Write a file that modifies the value of `myVar` to `333`

            ```
            guillaume@ubuntu:~/0x12$ cat 100-main.js
            #!/usr/bin/node
            myVar = 89;
            require('./100-let_me_const')
            console.log(myVar);
            guillaume@ubuntu:~/0x12$ ./100-main.js
            333
            guillaume@ubuntu:~/0x12$

            ```

            ![](https://s3.amazonaws.com/alx-intranet.hbtn.io/uploads/medias/2020/9/4ae30fb44f708dbb3abc211b784db614e615ca21.gif?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIARDDGGGOUSBVO6H7D%2F20220301%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220301T121514Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&X-Amz-Signature=a1f02cfa1a04eae1b926f44e9a5b754a0ebf8e706a6b5f5be7f2445959cc4c4f)

            Do you get it? Tweet! Post! Talk about it!

            Hint: Scope

            **This exercise doesn't pass `semistandard`** so don't worry about it.

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `100-let_me_const.js`

             Done? Help Check your code QA Review
        
    rubric: |

            Has something interesting to say.

-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext15
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |
            Tasks
            -----

            ### 15\. Call me Moby

            #advanced

            Score: 0.00% (Checks completed: 0.00%)

            Write a function that executes `x` times a function.

            -   The function must be visible from outside
            -   Prototype: `function (x, theFunction)`
            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ cat 101-main.js
            #!/usr/bin/node
            const callMeMoby = require('./101-call_me_moby').callMeMoby;
            callMeMoby(3, function () {
            console.log('C is fun');
            });
            guillaume@ubuntu:~/0x12$ ./101-main.js
            C is fun
            C is fun
            C is fun
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `101-call_me_moby.js`

             Done? Help Check your code Get a sandbox QA Review
    
    rubric: |

            Has something interesting to say.


-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext16
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 16\. Add me maybe

            #advanced

            Score: 0.00% (Checks completed: 0.00%)

            Write a function that increments and calls a function.

            -   The function must be visible from outside
            -   Prototype: `function (number, theFunction)`
            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ cat 102-main.js
            #!/usr/bin/node
            const addMeMaybe = require('./102-add_me_maybe').addMeMaybe;
            addMeMaybe(4, function (nb) {
            console.log('New value: ' + nb);
            });
            guillaume@ubuntu:~/0x12$ ./102-main.js
            New value: 5
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `102-add_me_maybe.js`

             Done? Help Check your code Get a sandbox QA Review
    
    rubric: |
    
        Has something interesting to say.


-
    type: PythonCodeQuestionWithHumanTextFeedback
    id: hgtext17
    access_rules:
        add_permissions:
            - change_answer
    value: 5
    human_feedback_percentage: 100
    is_optional_page: false
    timeout: 10
    prompt: |

            Tasks
            -----

            ### 17\. Increment object

            #advanced

            Score: 0.00% (Checks completed: 0.00%)

            Update this script by adding a new function `incr` that increments the integer `value`.

            -   You are not allowed to use `var`

            ```
            guillaume@ubuntu:~/0x12$ cat 103-object_fct.js
            #!/usr/bin/node
            const myObject = {
            type: 'object',
            value: 12
            };
            console.log(myObject);
            /*
            YOUR CODE HERE
            */
            myObject.incr();
            console.log(myObject);
            myObject.incr();
            console.log(myObject);
            myObject.incr();
            console.log(myObject);

            guillaume@ubuntu:~/0x12$ ./103-object_fct.js
            { type: 'object', value: 12 }
            { type: 'object', value: 13, incr: [Function] }
            { type: 'object', value: 14, incr: [Function] }
            { type: 'object', value: 15, incr: [Function] }
            guillaume@ubuntu:~/0x12$

            ```

            **Repo:**

            -   GitHub repository: `alx-higher_level_programming`
            -   Directory: `0x12-javascript-warm_up`
            -   File: `103-object_fct.js`
    
    rubric: |

            Has something interesting to say.



completion_text: |

        You have successfully completed the test exam!
