# This is a YAML comment, which is entirely ignored.

# YAML files in Relate are preprocessed with Jinja2.
# See http://jinja.pocoo.org/docs/latest/templates/ for syntax.

# This brings in a helper function that is used to include pages from
# separate files. This is optional, but conceivably useful.
{% from "yaml-macros.yml" import indented_include %}

title: "RELATE Test Quiz"

# The "|" character introduces a 'block literal', which means all text indented below
# it is taken literally. The description property holds text marked up with 'Markdown'.
# See https://documen.tician.de/relate/content.html#relate-markup for more.
#
# So the '#' character below introduces a first-level headline (not a comment).
description: |

    # RELATE Test Quiz

rules:
    start:
    -
        if_before: end_week 1
        if_has_role: [student, ta, instructor]
        if_has_fewer_sessions_than: 4
        may_start_new_session: True
        may_list_existing_sessions: True

    -
        may_start_new_session: False
        may_list_existing_sessions: True

    access:
    -
        message: "Welcome! This message is brought to you by the access rules."
        permissions: [view, submit_answer, end_session, see_correctness, see_answer_after_submission]

    grade_identifier: python_hello_world_quiz
    grade_aggregation_strategy: use_latest

    grading:
    -
        credit_percent: 100

groups:
-
    id: intro
    pages:

    -
        type: Page
        id: welcome
        content: |

            # Welcome to the test quiz for RELATE!

            Don't be scared.

-
    id: quiz_start
    shuffle: False
    pages:

    # Pages can be given in-line (like this one) or brought in by including
    # them from other files, as below.
    -
        type: MultipleChoiceQuestion
        id: shell_navigation
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #0

            Who created Python?

        choices:

          - ~CORRECT~ Guido van Rossum
          - Julien Barbier
          - Yukihiro Matsumoto
           
    -
        type: MultipleChoiceQuestion
        id: shell_navigation1
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #1
            
            What does this command line print?
            
                ```
                >>> print(f"{98} Battery street, {'San Francisco'}")
                ```

        choices:

          - San Francisco Battery street, 98
          - ~CORRECT~ 98 Battery street, San Francisco
          - “98 Battery street, San Francisco”
          - 8 Battery street, San
 
    -
        type: MultipleChoiceQuestion
        id: shell_navigation2
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #2
            
            What does this command line print?

                ```
                >>> a = "Python is cool"
                >>> print(a[-2])
            
        choices:

          - Nothing
          - ~CORRECT~ o
          - ol
          - l

    -
        type: MultipleChoiceQuestion
        id: shell_navigation3
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #3
            
            What does this command line print?

                ```
                >>> a = "Python is cool"
                >>> print(a[:6])
                ```

        choices:

          - is cool
          - Python is
          - Pytho
          - ~CORRECT~ Python

    -
        type: MultipleChoiceQuestion
        id: shell_navigation4
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #4
            
            What does this command line print?

                ```
                >>> a = "Python is cool"
                >>> print(a[0:6])
                ```

        choices:

          - Python is cool
          - Python is
          - ~CORRECT~ Python
          - Pytho
    
    -
        type: MultipleChoiceQuestion
        id: shell_navigation5
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #5
            
            What does this command line print?

                ```
                >>> a = "Python is cool"
                >>> print(a[4])
                ```

        choices:

          - h
          - ~CORRECT~ o
          - P
          - n
    
    -
        type: MultipleChoiceQuestion
        id: shell_navigation6
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #6
            
            What does this command line print?

                ```
                >>> print("Holberton school")
                ```

        choices:

          - ‘Holberton school’
          - ~CORRECT~ Holberton school
          - Holberton
          - “Holberton school”
    
    -
        type: MultipleChoiceQuestion
        id: shell_navigation7
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #7
            
            What does this command line print?

                ```
                >>> a = "Python is cool"
                >>> print(a[7:-5])
                ```

        choices:

          - ~CORRECT~ is
          - si
          - Python
          - on
          - nohtyP
    
    -
        type: MultipleChoiceQuestion
        id: shell_navigation8
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #8
            
            What does this command line print?

                ```
                >>> a = "Python is cool"
                >>> print(a[7:])
                ```

        choices:

          - ~CORRECT~ is cool
          - cool
          - Python i
          - Python is

    -   
        type: MultipleChoiceQuestion
        id: shell_navigation9
        credit_mode: exact
        value: 1
        shuffle: True
        prompt: |

            # Question #9
            
            What does this command line print?

                ```
                >>> print(f"{98} Battery street")
                ```

        choices:

          - 8 Battery street
          - 9 Battery street
          - ~CORRECT~ 98 Battery street
          - f"98 Battery street"


completion_text: |

    # See you in class!

    Thanks for completing the quiz.
